[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "ranking_challenge_examples"
version = "3.2.0"  # Bumped version to reflect new middleware addition
description = "The Prosocial Ranking Challenge"
authors = ["Ian Baker <ian@sonic.net>"]
readme = "README.md"
license = "MIT"
homepage = "https://humancompatible.ai/news/2024/01/18/the-prosocial-ranking-challenge-60000-in-prizes-for-better-social-media-algorithms/"
repository = "https://github.com/humancompatibleai/ranking-challenge"
keywords = ["ranking", "social media", "challenge", "metrics", "grafana"]

[tool.poetry.dependencies]
python = ">=3.10"
pydantic = ">=2.6.0"
faker = "*"
fastapi = ">=0.110.0"
requests = "*"
flask-cors = "*"
openai = "*"
nltk = "*"
httpx = "*"
uvicorn = { extras = ["standard"], version = "^0.18.3" }
ranking-challenge = "*"
flask = "*"
python-dotenv = "*"
redis = ">= 4.4.4"
psycopg2-binary = "*"
sqlalchemy = "*"
celery-redbeat = "*"
pandas = "^1.4.2"
twscrape = "^0.1.0"
prometheus_client = "*"  # Added for Grafana Metrics Middleware

[tool.poetry.dev-dependencies]
pip-tools = "*"
pytest = "*"
ruff = "*"
pre-commit = "^3.7.1"
fakeredis = "*"

[tool.poetry.extras]
module = ["pytest", "pydantic", "faker"]
sample_data = ["pandas", "numpy"]
examples_combined_ranking_server = [
    "celery",
    "uvicorn",
    "ranking-challenge",
    "redis",
    "pytest",
]
examples_combined_scorer_worker = [
    "pydantic",
    "celery",
    "fastapi",
    "redis",
    "pytest",
    "pandas",
    "nltk",
    "uvicorn",
]
examples_combined = [
    "celery",
    "redis",
    "pytest",
    "pandas",
    "nltk",
    "uvicorn",
    "ranking-challenge",
    "psycopg2-binary",
]
examples_combined_job_scheduler = ["celery", "celery-redbeat"]
examples_combined_sandbox_worker = [
    "celery",
    "redis",
    "pytest",
    "pandas",
    "nltk",
    "psycopg2",
    "celery-redbeat",
    "sqlalchemy",
    "psycopg2-binary",
]
grafana_metrics = [  # New extra for Grafana Metrics Middleware
    "fastapi",
    "prometheus_client",
    "requests",
]

[tool.poetry.urls]
homepage = "https://humancompatible.ai/news/2024/01/18/the-prosocial-ranking-challenge-60000-in-prizes-for-better-social-media-algorithms/"
repository = "https://github.com/humancompatibleai/ranking-challenge"
blog = "https://rankingchallenge.substack.com/"

[tool.poetry.scripts]
rcfaker = "ranking_challenge.fake:main"

[tool.ruff]
line-length = 100

[tool.ruff.lint]
extend-select = ["E501"]

[[tool.poetry.packages]]
include = "ranking_challenge"
from = "module/src"

# Developing the PRC python module
## Running tests
`pytest .`
## Releasing a new version
1. Bump the version number in `pyproject.toml`
2. `pip install build twine`
3. `python -m build`
4. unzip the whl in `dist/` (rename it first) and check that everything inside looks good
5. `twine check dist/*`
6. Upload to TestPyPi: `twine upload -r testpypi dist/*`
7. Check test.pypi.org to see if it looks good
8. Upload to real PyPI: `twine upload dist/*`
A nice doc on how to do this:
<https://realpython.com/pypi-publish-python-package/>